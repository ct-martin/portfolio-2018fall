webpackJsonp([11],{DSEk:function(t,e,s){"use strict";var i=s("w/Iz"),n=s("UH+E"),a=s("VU/8")(i.a,n.a,!1,null,null,null);a.options.__file="components/Carousel.vue",e.a=a.exports},LePX:function(t,e,s){"use strict";var i=s("DSEk");e.a={components:{Carousel:i.a},data:function(){return{banners:["/img/projects/arduino-macros.jpg"]}}}},"UH+E":function(t,e,s){"use strict";var i=function(){var t=this.$createElement,e=this._self._c||t;return e("div",{directives:[{name:"swiper",rawName:"v-swiper:mySwiper",value:this.swiperOptions,expression:"swiperOptions",arg:"mySwiper"}]},[e("div",{staticClass:"swiper-wrapper"},this._l(this.banners,function(t){return e("div",{key:t,staticClass:"swiper-slide"},[e("img",{attrs:{src:t}})])}),0),e("div",{staticClass:"swiper-button-prev",attrs:{slot:"button-prev"},slot:"button-prev"}),e("div",{staticClass:"swiper-button-next",attrs:{slot:"button-next"},slot:"button-next"}),e("div",{staticClass:"swiper-pagination swiper-pagination-bullets"})])};i._withStripped=!0;var n={render:i,staticRenderFns:[]};e.a=n},lOMW:function(t,e,s){"use strict";var i=function(){var t=this.$createElement,e=this._self._c||t;return e("article",{staticClass:"container"},[e("nav",{staticClass:"breadcrumb is-large",attrs:{"aria-label":"breadcrumbs"}},[e("ul",[e("li",[e("nuxt-link",{attrs:{to:"/projects"}},[this._v("Projects")])],1),e("li",{staticClass:"is-active has-text-weight-bold"},[e("nuxt-link",{attrs:{to:"/projects/arduino-macros","aria-current":"page"}},[this._v("Arduino Macro Buttons")])],1)])]),this._m(0),e("br"),e("Carousel",{staticStyle:{background:"black","max-height":"500px"},attrs:{banners:this.banners}}),e("br"),this._m(1)],1)};i._withStripped=!0;var n={render:i,staticRenderFns:[function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"content"},[e("p",[this._v("\n      Taking complex keyboard shortcuts to just a button press.\n    ")]),e("p",[this._v("\n      While relatively utilitarian, this project allows one to do simple macro-like keys for Photoshop, or really anything of your choosing.\n      Right now the code only handles keyboard shortcuts, but could be expanded to include direct API calls.\n      All buttons can be easily configured in the Arduino code and are passed to a simple server that replays the given commands.\n      There are three “zones” in my setup, a center button connected to the switch at the top, and then two zones of two buttons each with a switch on the right.\n      The switch allows you to change the function of the buttons in the zones, allowing for easier configuration.\n    ")]),e("p",[this._v("\n      The project isn’t perfect; the biggest issue I was encountering was that despite having the same serial timings,\n      the receiving program would sometimes break the send string in the wrong place, causing it to try to parse something like CTR+L+Z instead of CTRL+Z.\n      However, it’s a good platform to work off of, and given the flexibility of the code it would be easy to expand upon this for more controls.\n      One thing I want to look at, for example, is getting a dial for volume control.\n    ")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("a",{staticClass:"button is-link is-fullwidth",attrs:{href:"https://people.rit.edu/ctm2142/igme330/web%20audio-1-proj/",target:"_blank"}},[e("span",{staticClass:"fa fa-fw fa-video"}),this._v(" See the video")])}]};e.a=n},u27v:function(t,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=s("LePX"),n=s("lOMW"),a=s("VU/8")(i.a,n.a,!1,null,null,null);a.options.__file="pages/projects/arduino-macros.vue",e.default=a.exports},"w/Iz":function(t,e,s){"use strict";e.a={props:["banners"],data:function(){return{swiperOptions:{loop:!0,slidesPerView:"auto",centeredSlides:!0,spaceBetween:30,autoplay:{delay:3e3,disableOnIntegration:!1},pagination:{el:".swiper-pagination",clickable:!0},navigation:{nextEl:".swiper-button-next",prevEl:".swiper-button-prev"}}}}}}});